@import "vars.scss";
@import "defs.scss";
@import "fixes.scss";

/* SYSTEM-SPECIFIC STYLES */

.layout-boxed{
	// background: url('../img/new-boxed.jpg') repeat fixed;
	background: #222d3299;
}

// .list-group-item{
// 	&.active{
// 		background-color: map-get($all-colors,blue);
// 		border-color: map-get($all-colors,blue);
// 		&:focus,
// 		&:hover{
// 			background-color: map-get($all-colors,blue);
// 			border-color: map-get($all-colors,blue);
// 		}
// 	}
// }

@each $color in map-keys($all-colors)
{
	/* MODAL: #{$color} */
	.modal-dialog.modal-#{$color}{
		& > .modal-content{
			& > .modal-header{
				@if $color==black {
					background-color: lighten(map-get($all-colors,$color),10%);
					border-bottom-color: lighten(map-get($all-colors,$color),10%);
				}
				@else{
					background-color: map-get($all-colors,$color);
					border-bottom-color: map-get($all-colors,$color);
				}
				
				& > .modal-title{
					@if($color==black)
					{
						color: invert($color);
					}
				}

				& button.btn-outline{
					@if($color==white)
					{
						border-color: map-get($all-colors,black);
						color: map-get($all-colors,black);

						&:hover{
							opacity: 0.7;
						}
					}
				}
			}

			& > .modal-footer{
				@if $color==black {
					background-color: lighten(map-get($all-colors,$color),10%);
					border-bottom-color: lighten(map-get($all-colors,$color),10%);
				}
				@else{
					background-color: map-get($all-colors,$color);
					border-bottom-color: map-get($all-colors,$color);
				}
			}

			& > .modal-body{
				background-color: lighten(map-get($all-colors,$color),70%);
			}
		}
	}

	/* CALLOUT: #{$color} */
	.callout.callout-#{$color}{
		border-color: map-get($all-colors,$color);
		background-color: lighten(map-get($all-colors,$color),10%);

		@if $color==black
		{
			color: map-get($all-colors,white);
		}
	}

}